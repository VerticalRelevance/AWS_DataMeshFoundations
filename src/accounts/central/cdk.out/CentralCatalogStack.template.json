{
 "Resources": {
  "mydatabaseid5537A4A1": {
   "Type": "AWS::Glue::Database",
   "Properties": {
    "CatalogId": {
     "Ref": "AWS::AccountId"
    },
    "DatabaseInput": {
     "Name": "producer-a-db"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CentralCatalogStack/my_database_id/Resource"
   }
  },
  "MyTableBucketD51E7EDC": {
   "Type": "AWS::S3::Bucket",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CentralCatalogStack/MyTable/Bucket/Resource"
   }
  },
  "MyTable85A92380": {
   "Type": "AWS::Glue::Table",
   "Properties": {
    "CatalogId": {
     "Ref": "AWS::AccountId"
    },
    "DatabaseName": {
     "Ref": "mydatabaseid5537A4A1"
    },
    "TableInput": {
     "Description": "us_customers-a generated by CDK",
     "Name": "us_customers-a",
     "Parameters": {
      "classification": "json",
      "has_encrypted_data": false
     },
     "PartitionKeys": [
      {
       "Name": "year",
       "Type": "smallint"
      },
      {
       "Name": "month",
       "Type": "smallint"
      }
     ],
     "StorageDescriptor": {
      "Columns": [
       {
        "Name": "first_name",
        "Type": "string"
       },
       {
        "Name": "last_name",
        "Type": "string"
       },
       {
        "Name": "company_name",
        "Type": "string"
       },
       {
        "Name": "address",
        "Type": "string"
       },
       {
        "Name": "city",
        "Type": "string"
       },
       {
        "Name": "county",
        "Type": "string"
       },
       {
        "Name": "state",
        "Type": "string"
       },
       {
        "Name": "zip",
        "Type": "string"
       },
       {
        "Name": "phone1",
        "Type": "string"
       },
       {
        "Name": "phone2",
        "Type": "string"
       },
       {
        "Name": "email",
        "Type": "string"
       },
       {
        "Name": "web",
        "Type": "string"
       }
      ],
      "Compressed": false,
      "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
      "Location": {
       "Fn::Join": [
        "",
        [
         "s3://",
         {
          "Ref": "MyTableBucketD51E7EDC"
         },
         "/"
        ]
       ]
      },
      "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
      "SerdeInfo": {
       "SerializationLibrary": "org.openx.data.jsonserde.JsonSerDe"
      },
      "StoredAsSubDirectories": false
     },
     "TableType": "EXTERNAL_TABLE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CentralCatalogStack/MyTable/Table"
   }
  },
  "lakeformationgranttagbasedServiceRole24F25D55": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     "arn:aws:iam::aws:policy/AWSLakeFormationDataAdmin"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CentralCatalogStack/lakeformation-grant-tag-based/ServiceRole/Resource"
   }
  },
  "lakeformationgranttagbasedD5AFB064": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "eb91f866ba4298c6b3cd4c336e92c342852c9b8cdb5e0c43bb96c02ac7730999.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "lakeformationgranttagbasedServiceRole24F25D55",
      "Arn"
     ]
    },
    "Handler": "tag-based-grant.lambda_handler",
    "Runtime": "python3.8"
   },
   "DependsOn": [
    "lakeformationgranttagbasedServiceRole24F25D55"
   ],
   "Metadata": {
    "aws:cdk:path": "CentralCatalogStack/lakeformation-grant-tag-based/Resource",
    "aws:asset:path": "asset.eb91f866ba4298c6b3cd4c336e92c342852c9b8cdb5e0c43bb96c02ac7730999",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02PzQ6CMBCEn4V7Wf5eQMV4NuidLKVipbSGtjGm6btLKRpP32R2MtkpoSrA5Qm+dEr7MRW8A3cxSEeyWK0bhGXg6ps8osEONSOLvmInmCe6AnewdGQmmJuKOCxJTwROXY/gTlZSw5UMsa/2hOMErlFirQwMjS1qzYyGfYAnK5Z3Bi4H0jCt7Exj/k/XSvY8duYpiucdIU9226IsMKzYLu43JK7w5Pw2dyWzCoocyuShOU9nKw2fGDSRH7IsrQUlAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "CentralCatalogStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}